{"prompt": "send an email to Alex with subject 'Meeting' and body 'Let's meet tomorrow.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["Alex"], "subject": ["Meeting"], "body": ["Let's meet tomorrow."]}, "args": {"to": "Alex", "subject": "Meeting", "body": "Let's meet tomorrow."}}
{"prompt": "open notepad and write 'Grocery list: milk, eggs, bread'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Grocery list: milk, eggs, bread"]}, "args": {"text": "Grocery list: milk, eggs, bread"}}
{"prompt": "set an alarm for 7:00 AM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["7:00 AM"]}, "args": {"time": "7:00 AM"}}
{"prompt": "create a new calendar event for 'Team Sync' on Friday at 2 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Team Sync"], "day": ["Friday"], "time": ["2 PM"]}, "args": {"title": "Team Sync", "day": "Friday", "time": "2 PM"}}
{"prompt": "add 'buy new shoes' to my to-do list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["buy new shoes"]}, "args": {"task": "buy new shoes"}}
{"prompt": "what's the weather like in New York today?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["New York"]}, "args": {"location": "New York"}}
{"prompt": "call Mom", "context": "Initiates a phone call to a contact.", "function_signature": "make_call(contact: str)", "param_annotations": {"contact": ["Mom"]}, "args": {"contact": "Mom"}}
{"prompt": "play some jazz music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["jazz"]}, "args": {"genre": "jazz"}}
{"prompt": "send a text to Jane saying 'I'll be there in 10 minutes.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Jane"], "message": ["I'll be there in 10 minutes."]}, "args": {"to": "Jane", "message": "I'll be there in 10 minutes."}}
{"prompt": "search for the nearest coffee shop", "context": "Searches for a specific type of place nearby.", "function_signature": "find_nearby_place(place_type: str)", "param_annotations": {"place_type": ["coffee shop"]}, "args": {"place_type": "coffee shop"}}
{"prompt": "set a timer for 20 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["20 minutes"]}, "args": {"duration": "20 minutes"}}
{"prompt": "translate 'Hello, how are you?' to Spanish", "context": "Translates a phrase to another language.", "function_signature": "translate_text(text: str, language: str)", "param_annotations": {"text": ["Hello, how are you?"], "language": ["Spanish"]}, "args": {"text": "Hello, how are you?", "language": "Spanish"}}
{"prompt": "take a picture", "context": "Takes a photo.", "function_signature": "take_photo()", "param_annotations": {}, "args": {}}
{"prompt": "what's my flight status for United Airlines flight 123?", "context": "Checks the status of a flight.", "function_signature": "get_flight_status(airline: str, flight_number: str)", "param_annotations": {"airline": ["United Airlines"], "flight_number": ["123"]}, "args": {"airline": "United Airlines", "flight_number": "123"}}
{"prompt": "order a pizza from Pizza Hut", "context": "Orders food from a restaurant.", "function_signature": "order_food(restaurant: str, item: str)", "param_annotations": {"restaurant": ["Pizza Hut"], "item": ["pizza"]}, "args": {"restaurant": "Pizza Hut", "item": "pizza"}}
{"prompt": "find a recipe for chocolate chip cookies", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["chocolate chip cookies"]}, "args": {"food_item": "chocolate chip cookies"}}
{"prompt": "turn on the lights in the living room", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str, room: str)", "param_annotations": {"device": ["lights"], "state": ["on"], "room": ["living room"]}, "args": {"device": "lights", "state": "on", "room": "living room"}}
{"prompt": "show me directions to the closest gas station", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest gas station"]}, "args": {"place": "closest gas station"}}
{"prompt": "what's the capital of France?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of France?"]}, "args": {"question": "what's the capital of France?"}}
{"prompt": "book a table for two at The Italian Kitchen for 7 PM tonight", "context": "Books a reservation at a restaurant.", "function_signature": "book_restaurant_table(restaurant: str, party_size: int, time: str, date: str)", "param_annotations": {"restaurant": ["The Italian Kitchen"], "party_size": [2], "time": ["7 PM"], "date": ["tonight"]}, "args": {"restaurant": "The Italian Kitchen", "party_size": 2, "time": "7 PM", "date": "tonight"}}
{"prompt": "how many calories are in a banana?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["banana"]}, "args": {"food_item": "banana"}}
{"prompt": "find a good comedy movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["comedy"]}, "args": {"genre": "comedy"}}
{"prompt": "what's the stock price of Google?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Google"]}, "args": {"company": "Google"}}
{"prompt": "remind me to call John at 3 PM tomorrow", "context": "Sets a reminder.", "function_signature": "set_reminder(task: str, time: str, date: str, contact: str)", "param_annotations": {"task": ["call John"], "time": ["3 PM"], "date": ["tomorrow"], "contact": ["John"]}, "args": {"task": "call John", "time": "3 PM", "date": "tomorrow", "contact": "John"}}
{"prompt": "open the Amazon app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Amazon"]}, "args": {"app_name": "Amazon"}}
{"prompt": "what time is it in Tokyo?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Tokyo"]}, "args": {"location": "Tokyo"}}
{"prompt": "show me the news headlines", "context": "Displays the latest news.", "function_signature": "get_news_headlines()", "param_annotations": {}, "args": {}}
{"prompt": "tell me a joke", "context": "Tells a joke.", "function_signature": "tell_joke()", "param_annotations": {}, "args": {}}
{"prompt": "calculate the square root of 64", "context": "Performs a mathematical calculation.", "function_signature": "calculate(expression: str)", "param_annotations": {"expression": ["square root of 64"]}, "args": {"expression": "square root of 64"}}
{"prompt": "what's the definition of 'serendipity'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["serendipity"]}, "args": {"word": "serendipity"}}
{"prompt": "turn off the TV", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["TV"], "state": ["off"]}, "args": {"device": "TV", "state": "off"}}
{"prompt": "who is the current president of the United States?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["who is the current president of the United States?"]}, "args": {"question": "who is the current president of the United States?"}}
{"prompt": "send an email to my boss, subject 'Project update', body 'The project is on track.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["my boss"], "subject": ["Project update"], "body": ["The project is on track."]}, "args": {"to": "my boss", "subject": "Project update", "body": "The project is on track."}}
{"prompt": "what's on my schedule for tomorrow?", "context": "Checks the user's schedule.", "function_signature": "get_schedule_for_day(day: str)", "param_annotations": {"day": ["tomorrow"]}, "args": {"day": "tomorrow"}}
{"prompt": "find a good restaurant for dinner tonight", "context": "Finds a restaurant for a specific meal.", "function_signature": "find_restaurant_for_meal(meal: str, date: str)", "param_annotations": {"meal": ["dinner"], "date": ["tonight"]}, "args": {"meal": "dinner", "date": "tonight"}}
{"prompt": "play 'Bohemian Rhapsody' by Queen on Spotify", "context": "Plays a specific song on a music service.", "function_signature": "play_song(song_title: str, artist: str, service: str)", "param_annotations": {"song_title": ["Bohemian Rhapsody"], "artist": ["Queen"], "service": ["Spotify"]}, "args": {"song_title": "Bohemian Rhapsody", "artist": "Queen", "service": "Spotify"}}
{"prompt": "what's the population of China?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the population of China?"]}, "args": {"question": "what's the population of China?"}}
{"prompt": "set an alarm for 6:00 AM on weekdays", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["6:00 AM"], "frequency": ["weekdays"]}, "args": {"time": "6:00 AM", "frequency": "weekdays"}}
{"prompt": "add 'finish presentation' to my work to-do list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["finish presentation"], "list_name": ["work"]}, "args": {"task": "finish presentation", "list_name": "work"}}
{"prompt": "what's the exchange rate from USD to EUR?", "context": "Gets the currency exchange rate.", "function_signature": "get_exchange_rate(from_currency: str, to_currency: str)", "param_annotations": {"from_currency": ["USD"], "to_currency": ["EUR"]}, "args": {"from_currency": "USD", "to_currency": "EUR"}}
{"prompt": "show me pictures of cats", "context": "Searches for images.", "function_signature": "search_images(query: str)", "param_annotations": {"query": ["cats"]}, "args": {"query": "cats"}}
{"prompt": "turn up the thermostat to 72 degrees", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, setting: str)", "param_annotations": {"device": ["thermostat"], "setting": ["72 degrees"]}, "args": {"device": "thermostat", "setting": "72 degrees"}}
{"prompt": "what's the next public holiday in the US?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["US"]}, "args": {"country": "US"}}
{"prompt": "navigate to home", "context": "Navigates to a saved location.", "function_signature": "navigate_to_saved_location(location: str)", "param_annotations": {"location": ["home"]}, "args": {"location": "home"}}
{"prompt": "book a flight to London for next Tuesday", "context": "Books a flight.", "function_signature": "book_flight(destination: str, date: str)", "param_annotations": {"destination": ["London"], "date": ["next Tuesday"]}, "args": {"destination": "London", "date": "next Tuesday"}}
{"prompt": "find a good biography book to read", "context": "Finds a book of a specific genre.", "function_signature": "find_book_by_genre(genre: str)", "param_annotations": {"genre": ["biography"]}, "args": {"genre": "biography"}}
{"prompt": "what's the score of the Yankees game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Yankees"]}, "args": {"team": "Yankees"}}
{"prompt": "order a car from Uber to go to the airport", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Uber"], "destination": ["the airport"]}, "args": {"service": "Uber", "destination": "the airport"}}
{"prompt": "what is the boiling point of water?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the boiling point of water?"]}, "args": {"question": "what is the boiling point of water?"}}
{"prompt": "tell me a fun fact about space", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["space"]}, "args": {"topic": "space"}}
{"prompt": "set a timer for a 30-minute nap", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str, purpose: str)", "param_annotations": {"duration": ["30-minute"], "purpose": ["nap"]}, "args": {"duration": "30-minute", "purpose": "nap"}}
{"prompt": "add an event 'dentist appointment' to my calendar on Thursday at 10 AM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["dentist appointment"], "day": ["Thursday"], "time": ["10 AM"]}, "args": {"title": "dentist appointment", "day": "Thursday", "time": "10 AM"}}
{"prompt": "what's the phone number for the nearest library?", "context": "Finds the phone number for a local place.", "function_signature": "get_phone_number(place: str)", "param_annotations": {"place": ["nearest library"]}, "args": {"place": "nearest library"}}
{"prompt": "open the settings app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["settings"]}, "args": {"app_name": "settings"}}
{"prompt": "what's the weather forecast for the weekend in Seattle?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["Seattle"], "time_frame": ["the weekend"]}, "args": {"location": "Seattle", "time_frame": "the weekend"}}
{"prompt": "find a workout video on YouTube for beginners", "context": "Searches for a video on a specific platform.", "function_signature": "search_video(query: str, platform: str)", "param_annotations": {"query": ["workout video for beginners"], "platform": ["YouTube"]}, "args": {"query": "workout video for beginners", "platform": "YouTube"}}
{"prompt": "convert 50 miles to kilometers", "context": "Converts a unit of measurement.", "function_signature": "convert_units(value: int, from_unit: str, to_unit: str)", "param_annotations": {"value": [50], "from_unit": ["miles"], "to_unit": ["kilometers"]}, "args": {"value": 50, "from_unit": "miles", "to_unit": "kilometers"}}
{"prompt": "what is the largest ocean in the world?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the largest ocean in the world?"]}, "args": {"question": "what is the largest ocean in the world?"}}
{"prompt": "send a text to Dad saying 'Happy birthday!'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Dad"], "message": ["Happy birthday!"]}, "args": {"to": "Dad", "message": "Happy birthday!"}}
{"prompt": "play my 'Morning Commute' playlist", "context": "Plays a specific playlist.", "function_signature": "play_playlist(playlist_name: str)", "param_annotations": {"playlist_name": ["Morning Commute"]}, "args": {"playlist_name": "Morning Commute"}}
{"prompt": "find a recipe for a vegan lasagna", "context": "Finds a recipe with specific dietary requirements.", "function_signature": "find_recipe(food_item: str, dietary_restriction: str)", "param_annotations": {"food_item": ["lasagna"], "dietary_restriction": ["vegan"]}, "args": {"food_item": "lasagna", "dietary_restriction": "vegan"}}
{"prompt": "what's the capital of Japan?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Japan?"]}, "args": {"question": "what's the capital of Japan?"}}
{"prompt": "set a reminder to 'pick up dry cleaning' on my way home", "context": "Sets a location-based reminder.", "function_signature": "set_location_reminder(task: str, location: str)", "param_annotations": {"task": ["pick up dry cleaning"], "location": ["on my way home"]}, "args": {"task": "pick up dry cleaning", "location": "on my way home"}}
{"prompt": "what's the latest movie review for 'The Martian'?", "context": "Gets movie reviews.", "function_signature": "get_movie_review(movie_title: str)", "param_annotations": {"movie_title": ["The Martian"]}, "args": {"movie_title": "The Martian"}}
{"prompt": "show me the best sushi restaurants nearby", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["sushi"]}, "args": {"place_type": "restaurants", "cuisine": "sushi"}}
{"prompt": "open Google Chrome", "context": "Opens a web browser.", "function_signature": "open_web_browser(browser_name: str)", "param_annotations": {"browser_name": ["Google Chrome"]}, "args": {"browser_name": "Google Chrome"}}
{"prompt": "what's the temperature outside?", "context": "Checks the current temperature.", "function_signature": "get_current_temperature()", "param_annotations": {}, "args": {}}
{"prompt": "send an email to the team, subject 'Weekly report', body 'Please submit your reports by EOD.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["the team"], "subject": ["Weekly report"], "body": ["Please submit your reports by EOD."]}, "args": {"to": "the team", "subject": "Weekly report", "body": "Please submit your reports by EOD."}}
{"prompt": "how many feet are in a mile?", "context": "Answers a general knowledge question about units.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["how many feet are in a mile?"]}, "args": {"question": "how many feet are in a mile?"}}
{"prompt": "add 'call insurance company' to my tasks", "context": "Adds a task to a to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["call insurance company"]}, "args": {"task": "call insurance company"}}
{"prompt": "what's the flight time from New York to London?", "context": "Gets the duration of a flight.", "function_signature": "get_flight_duration(from_city: str, to_city: str)", "param_annotations": {"from_city": ["New York"], "to_city": ["London"]}, "args": {"from_city": "New York", "to_city": "London"}}
{"prompt": "set an alarm for 5:45 PM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["5:45 PM"]}, "args": {"time": "5:45 PM"}}
{"prompt": "open notepad and write 'Remember to pay the bills.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Remember to pay the bills."]}, "args": {"text": "Remember to pay the bills."}}
{"prompt": "what is the population of the United States?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the population of the United States?"]}, "args": {"question": "what is the population of the United States?"}}
{"prompt": "find a horror movie from the 90s", "context": "Finds a movie based on genre and decade.", "function_signature": "find_movie_by_genre_and_decade(genre: str, decade: str)", "param_annotations": {"genre": ["horror"], "decade": ["90s"]}, "args": {"genre": "horror", "decade": "90s"}}
{"prompt": "send a text to my wife saying 'I love you.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my wife"], "message": ["I love you."]}, "args": {"to": "my wife", "message": "I love you."}}
{"prompt": "what's the schedule for the bus to downtown?", "context": "Gets public transit information.", "function_signature": "get_transit_schedule(transport_type: str, destination: str)", "param_annotations": {"transport_type": ["bus"], "destination": ["downtown"]}, "args": {"transport_type": "bus", "destination": "downtown"}}
{"prompt": "open the Maps app and find the nearest bank", "context": "Opens a mapping application and searches for a place.", "function_signature": "open_app_and_find_place(app_name: str, place_type: str)", "param_annotations": {"app_name": ["Maps"], "place_type": ["nearest bank"]}, "args": {"app_name": "Maps", "place_type": "nearest bank"}}
{"prompt": "what's the date today?", "context": "Gets the current date.", "function_signature": "get_current_date()", "param_annotations": {}, "args": {}}
{"prompt": "what's the definition of 'quixotic'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["quixotic"]}, "args": {"word": "quixotic"}}
{"prompt": "find a documentary about climate change", "context": "Finds a documentary on a specific topic.", "function_signature": "find_documentary(topic: str)", "param_annotations": {"topic": ["climate change"]}, "args": {"topic": "climate change"}}
{"prompt": "turn on the heat", "context": "Controls a smart thermostat.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["heat"], "state": ["on"]}, "args": {"device": "heat", "state": "on"}}
{"prompt": "what's the distance between Paris and Berlin?", "context": "Calculates the distance between two locations.", "function_signature": "get_distance_between_locations(location1: str, location2: str)", "param_annotations": {"location1": ["Paris"], "location2": ["Berlin"]}, "args": {"location1": "Paris", "location2": "Berlin"}}
{"prompt": "book a hotel in Rome for 3 nights in July", "context": "Books a hotel.", "function_signature": "book_hotel(location: str, duration_nights: int, month: str)", "param_annotations": {"location": ["Rome"], "duration_nights": [3], "month": ["July"]}, "args": {"location": "Rome", "duration_nights": 3, "month": "July"}}
{"prompt": "show me the latest headlines from BBC News", "context": "Displays news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["BBC News"]}, "args": {"source": "BBC News"}}
{"prompt": "what's the average lifespan of a dog?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the average lifespan of a dog?"]}, "args": {"question": "what's the average lifespan of a dog?"}}
{"prompt": "send an email to Chris with subject 'Questions about the report' and body 'Can you clarify a few points?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["Chris"], "subject": ["Questions about the report"], "body": ["Can you clarify a few points?"]}, "args": {"to": "Chris", "subject": "Questions about the report", "body": "Can you clarify a few points?"}}
{"prompt": "set a reminder for 'buy groceries' for 6 PM", "context": "Sets a reminder for a specific task and time.", "function_signature": "set_reminder(task: str, time: str)", "param_annotations": {"task": ["buy groceries"], "time": ["6 PM"]}, "args": {"task": "buy groceries", "time": "6 PM"}}
{"prompt": "what's the stock price of Apple?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Apple"]}, "args": {"company": "Apple"}}
{"prompt": "add a new event 'Birthday Party' on Saturday at 8 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Birthday Party"], "day": ["Saturday"], "time": ["8 PM"]}, "args": {"title": "Birthday Party", "day": "Saturday", "time": "8 PM"}}
{"prompt": "show me directions to the closest hospital", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest hospital"]}, "args": {"place": "closest hospital"}}
{"prompt": "what's the weather like in London next week?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["London"], "time_frame": ["next week"]}, "args": {"location": "London", "time_frame": "next week"}}
{"prompt": "play some rock music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["rock"]}, "args": {"genre": "rock"}}
{"prompt": "turn off the lights in the kitchen", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str, room: str)", "param_annotations": {"device": ["lights"], "state": ["off"], "room": ["kitchen"]}, "args": {"device": "lights", "state": "off", "room": "kitchen"}}
{"prompt": "add 'pick up dry cleaning' to my to-do list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["pick up dry cleaning"]}, "args": {"task": "pick up dry cleaning"}}
{"prompt": "what's the next public holiday in Canada?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["Canada"]}, "args": {"country": "Canada"}}
{"prompt": "find a recipe for chicken noodle soup", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["chicken noodle soup"]}, "args": {"food_item": "chicken noodle soup"}}
{"prompt": "send a text to Mom saying 'I'm on my way home.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Mom"], "message": ["I'm on my way home."]}, "args": {"to": "Mom", "message": "I'm on my way home."}}
{"prompt": "what's the capital of Germany?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Germany?"]}, "args": {"question": "what's the capital of Germany?"}}
{"prompt": "open the camera app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["camera"]}, "args": {"app_name": "camera"}}
{"prompt": "set a timer for 15 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["15 minutes"]}, "args": {"duration": "15 minutes"}}
{"prompt": "what's the nutritional information for a medium apple?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["medium apple"]}, "args": {"food_item": "medium apple"}}
{"prompt": "what's the score of the Lakers game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Lakers"]}, "args": {"team": "Lakers"}}
{"prompt": "send an email to Sarah with subject 'Dinner plans' and body 'Are you free for dinner on Thursday?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["Sarah"], "subject": ["Dinner plans"], "body": ["Are you free for dinner on Thursday?"]}, "args": {"to": "Sarah", "subject": "Dinner plans", "body": "Are you free for dinner on Thursday?"}}
{"prompt": "open notepad and write 'Meeting notes: agenda, attendees, action items.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Meeting notes: agenda, attendees, action items."]}, "args": {"text": "Meeting notes: agenda, attendees, action items."}}
{"prompt": "create a new calendar event 'Doctor's Appointment' for next Monday at 9 AM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Doctor's Appointment"], "day": ["next Monday"], "time": ["9 AM"]}, "args": {"title": "Doctor's Appointment", "day": "next Monday", "time": "9 AM"}}
{"prompt": "remind me to 'renew my passport' in 6 months", "context": "Sets a reminder for a specific task and time frame.", "function_signature": "set_reminder(task: str, time_frame: str)", "param_annotations": {"task": ["renew my passport"], "time_frame": ["in 6 months"]}, "args": {"task": "renew my passport", "time_frame": "in 6 months"}}
{"prompt": "what's the weather in Paris on Tuesday?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, day: str)", "param_annotations": {"location": ["Paris"], "day": ["Tuesday"]}, "args": {"location": "Paris", "day": "Tuesday"}}
{"prompt": "search for good Italian restaurants near me", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["Italian"]}, "args": {"place_type": "restaurants", "cuisine": "Italian"}}
{"prompt": "open the Photos app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Photos"]}, "args": {"app_name": "Photos"}}
{"prompt": "how many centimeters are in a meter?", "context": "Answers a general knowledge question about units.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["how many centimeters are in a meter?"]}, "args": {"question": "how many centimeters are in a meter?"}}
{"prompt": "find a science fiction movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["science fiction"]}, "args": {"genre": "science fiction"}}
{"prompt": "what's the current time in Sydney?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Sydney"]}, "args": {"location": "Sydney"}}
{"prompt": "book a car from Lyft to go to the train station", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Lyft"], "destination": ["the train station"]}, "args": {"service": "Lyft", "destination": "the train station"}}
{"prompt": "what's the capital of Brazil?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Brazil?"]}, "args": {"question": "what's the capital of Brazil?"}}
{"prompt": "send a text to Ben saying 'What time is the game?'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Ben"], "message": ["What time is the game?"]}, "args": {"to": "Ben", "message": "What time is the game?"}}
{"prompt": "turn down the volume to 30", "context": "Controls the volume of a device.", "function_signature": "control_volume(level: int)", "param_annotations": {"level": [30]}, "args": {"level": 30}}
{"prompt": "find a recipe for a gluten-free cake", "context": "Finds a recipe with specific dietary requirements.", "function_signature": "find_recipe(food_item: str, dietary_restriction: str)", "param_annotations": {"food_item": ["cake"], "dietary_restriction": ["gluten-free"]}, "args": {"food_item": "cake", "dietary_restriction": "gluten-free"}}
{"prompt": "what is the largest country by area?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the largest country by area?"]}, "args": {"question": "what is the largest country by area?"}}
{"prompt": "set an alarm for 7:45 AM on weekdays", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["7:45 AM"], "frequency": ["weekdays"]}, "args": {"time": "7:45 AM", "frequency": "weekdays"}}
{"prompt": "what's the next solar eclipse?", "context": "Gets information about astronomical events.", "function_signature": "get_astronomical_event_info(event: str)", "param_annotations": {"event": ["solar eclipse"]}, "args": {"event": "solar eclipse"}}
{"prompt": "show me directions to the nearest post office", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["nearest post office"]}, "args": {"place": "nearest post office"}}
{"prompt": "add 'buy new headphones' to my shopping list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["buy new headphones"], "list_name": ["shopping list"]}, "args": {"task": "buy new headphones", "list_name": "shopping list"}}
{"prompt": "open the Spotify app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Spotify"]}, "args": {"app_name": "Spotify"}}
{"prompt": "what's the weather like in a specific location?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["a specific location"]}, "args": {"location": "a specific location"}}
{"prompt": "send an email to 'friend@example.com' with subject 'Hi' and body 'Hope you are doing well.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["friend@example.com"], "subject": ["Hi"], "body": ["Hope you are doing well."]}, "args": {"to": "friend@example.com", "subject": "Hi", "body": "Hope you are doing well."}}
{"prompt": "open notepad and write 'This is a test.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["This is a test."]}, "args": {"text": "This is a test."}}
{"prompt": "set an alarm for 6:15 AM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["6:15 AM"]}, "args": {"time": "6:15 AM"}}
{"prompt": "create a new calendar event for 'Project Deadline' on Friday at 5 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Project Deadline"], "day": ["Friday"], "time": ["5 PM"]}, "args": {"title": "Project Deadline", "day": "Friday", "time": "5 PM"}}
{"prompt": "add 'call the doctor' to my to-do list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["call the doctor"]}, "args": {"task": "call the doctor"}}
{"prompt": "what's the weather like in Toronto today?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["Toronto"]}, "args": {"location": "Toronto"}}
{"prompt": "call Dad", "context": "Initiates a phone call to a contact.", "function_signature": "make_call(contact: str)", "param_annotations": {"contact": ["Dad"]}, "args": {"contact": "Dad"}}
{"prompt": "play some pop music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["pop"]}, "args": {"genre": "pop"}}
{"prompt": "send a text to Chris saying 'Are we still on for lunch?'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Chris"], "message": ["Are we still on for lunch?"]}, "args": {"to": "Chris", "message": "Are we still on for lunch?"}}
{"prompt": "search for the nearest bookstore", "context": "Searches for a specific type of place nearby.", "function_signature": "find_nearby_place(place_type: str)", "param_annotations": {"place_type": ["bookstore"]}, "args": {"place_type": "bookstore"}}
{"prompt": "set a timer for 10 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["10 minutes"]}, "args": {"duration": "10 minutes"}}
{"prompt": "translate 'Where is the library?' to French", "context": "Translates a phrase to another language.", "function_signature": "translate_text(text: str, language: str)", "param_annotations": {"text": ["Where is the library?"], "language": ["French"]}, "args": {"text": "Where is the library?", "language": "French"}}
{"prompt": "take a video", "context": "Takes a video.", "function_signature": "take_video()", "param_annotations": {}, "args": {}}
{"prompt": "what's my flight status for Delta Airlines flight 456?", "context": "Checks the status of a flight.", "function_signature": "get_flight_status(airline: str, flight_number: str)", "param_annotations": {"airline": ["Delta Airlines"], "flight_number": ["456"]}, "args": {"airline": "Delta Airlines", "flight_number": "456"}}
{"prompt": "order a burger from McDonald's", "context": "Orders food from a restaurant.", "function_signature": "order_food(restaurant: str, item: str)", "param_annotations": {"restaurant": ["McDonald's"], "item": ["burger"]}, "args": {"restaurant": "McDonald's", "item": "burger"}}
{"prompt": "find a recipe for a vegetarian chili", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["vegetarian chili"]}, "args": {"food_item": "vegetarian chili"}}
{"prompt": "turn on the fan in the bedroom", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str, room: str)", "param_annotations": {"device": ["fan"], "state": ["on"], "room": ["bedroom"]}, "args": {"device": "fan", "state": "on", "room": "bedroom"}}
{"prompt": "show me directions to the closest grocery store", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest grocery store"]}, "args": {"place": "closest grocery store"}}
{"prompt": "what's the capital of Spain?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Spain?"]}, "args": {"question": "what's the capital of Spain?"}}
{"prompt": "book a table for four at The Steakhouse for 8 PM tonight", "context": "Books a reservation at a restaurant.", "function_signature": "book_restaurant_table(restaurant: str, party_size: int, time: str, date: str)", "param_annotations": {"restaurant": ["The Steakhouse"], "party_size": [4], "time": ["8 PM"], "date": ["tonight"]}, "args": {"restaurant": "The Steakhouse", "party_size": 4, "time": "8 PM", "date": "tonight"}}
{"prompt": "how many calories are in a chocolate bar?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["chocolate bar"]}, "args": {"food_item": "chocolate bar"}}
{"prompt": "find a good drama movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["drama"]}, "args": {"genre": "drama"}}
{"prompt": "what's the stock price of Tesla?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Tesla"]}, "args": {"company": "Tesla"}}
{"prompt": "remind me to 'buy a gift for Mom' next week", "context": "Sets a reminder.", "function_signature": "set_reminder(task: str, time_frame: str)", "param_annotations": {"task": ["buy a gift for Mom"], "time_frame": ["next week"]}, "args": {"task": "buy a gift for Mom", "time_frame": "next week"}}
{"prompt": "open the Twitter app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Twitter"]}, "args": {"app_name": "Twitter"}}
{"prompt": "what time is it in London?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["London"]}, "args": {"location": "London"}}
{"prompt": "show me the latest headlines from CNN", "context": "Displays the latest news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["CNN"]}, "args": {"source": "CNN"}}
{"prompt": "tell me a riddle", "context": "Tells a riddle.", "function_signature": "tell_riddle()", "param_annotations": {}, "args": {}}
{"prompt": "calculate 15 percent of 200", "context": "Performs a mathematical calculation.", "function_signature": "calculate(expression: str)", "param_annotations": {"expression": ["15 percent of 200"]}, "args": {"expression": "15 percent of 200"}}
{"prompt": "what's the definition of 'ephemeral'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["ephemeral"]}, "args": {"word": "ephemeral"}}
{"prompt": "turn off the fan", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["fan"], "state": ["off"]}, "args": {"device": "fan", "state": "off"}}
{"prompt": "who won the last Super Bowl?", "context": "Answers a general knowledge question about sports.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["who won the last Super Bowl?"]}, "args": {"question": "who won the last Super Bowl?"}}
{"prompt": "send an email to 'friend2@example.com' with subject 'Quick Question' and body 'Are you available to chat later?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["friend2@example.com"], "subject": ["Quick Question"], "body": ["Are you available to chat later?"]}, "args": {"to": "friend2@example.com", "subject": "Quick Question", "body": "Are you available to chat later?"}}
{"prompt": "what's on my schedule for today?", "context": "Checks the user's schedule.", "function_signature": "get_schedule_for_day(day: str)", "param_annotations": {"day": ["today"]}, "args": {"day": "today"}}
{"prompt": "find a good place for breakfast tomorrow", "context": "Finds a place for a specific meal.", "function_signature": "find_restaurant_for_meal(meal: str, date: str)", "param_annotations": {"meal": ["breakfast"], "date": ["tomorrow"]}, "args": {"meal": "breakfast", "date": "tomorrow"}}
{"prompt": "play 'Stairway to Heaven' by Led Zeppelin on Apple Music", "context": "Plays a specific song on a music service.", "function_signature": "play_song(song_title: str, artist: str, service: str)", "param_annotations": {"song_title": ["Stairway to Heaven"], "artist": ["Led Zeppelin"], "service": ["Apple Music"]}, "args": {"song_title": "Stairway to Heaven", "artist": "Led Zeppelin", "service": "Apple Music"}}
{"prompt": "what's the population of India?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the population of India?"]}, "args": {"question": "what's the population of India?"}}
{"prompt": "set a recurring alarm for 9:00 PM on weekends", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["9:00 PM"], "frequency": ["weekends"]}, "args": {"time": "9:00 PM", "frequency": "weekends"}}
{"prompt": "add 'book flight' to my travel to-do list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["book flight"], "list_name": ["travel"]}, "args": {"task": "book flight", "list_name": "travel"}}
{"prompt": "what's the exchange rate from JPY to USD?", "context": "Gets the currency exchange rate.", "function_signature": "get_exchange_rate(from_currency: str, to_currency: str)", "param_annotations": {"from_currency": ["JPY"], "to_currency": ["USD"]}, "args": {"from_currency": "JPY", "to_currency": "USD"}}
{"prompt": "show me pictures of dogs", "context": "Searches for images.", "function_signature": "search_images(query: str)", "param_annotations": {"query": ["dogs"]}, "args": {"query": "dogs"}}
{"prompt": "turn down the thermostat to 68 degrees", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, setting: str)", "param_annotations": {"device": ["thermostat"], "setting": ["68 degrees"]}, "args": {"device": "thermostat", "setting": "68 degrees"}}
{"prompt": "what's the next public holiday in the UK?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["UK"]}, "args": {"country": "UK"}}
{"prompt": "navigate to work", "context": "Navigates to a saved location.", "function_signature": "navigate_to_saved_location(location: str)", "param_annotations": {"location": ["work"]}, "args": {"location": "work"}}
{"prompt": "book a flight to Paris for next Friday", "context": "Books a flight.", "function_signature": "book_flight(destination: str, date: str)", "param_annotations": {"destination": ["Paris"], "date": ["next Friday"]}, "args": {"destination": "Paris", "date": "next Friday"}}
{"prompt": "find a good non-fiction book to read", "context": "Finds a book of a specific genre.", "function_signature": "find_book_by_genre(genre: str)", "param_annotations": {"genre": ["non-fiction"]}, "args": {"genre": "non-fiction"}}
{"prompt": "what's the score of the Warriors game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Warriors"]}, "args": {"team": "Warriors"}}
{"prompt": "order a car from Uber to go to the office", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Uber"], "destination": ["the office"]}, "args": {"service": "Uber", "destination": "the office"}}
{"prompt": "what is the largest planet in our solar system?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the largest planet in our solar system?"]}, "args": {"question": "what is the largest planet in our solar system?"}}
{"prompt": "tell me a fun fact about history", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["history"]}, "args": {"topic": "history"}}
{"prompt": "set a timer for a 45-minute study session", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str, purpose: str)", "param_annotations": {"duration": ["45-minute"], "purpose": ["study session"]}, "args": {"duration": "45-minute", "purpose": "study session"}}
{"prompt": "add an event 'Team Meeting' to my calendar on Tuesday at 11 AM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Team Meeting"], "day": ["Tuesday"], "time": ["11 AM"]}, "args": {"title": "Team Meeting", "day": "Tuesday", "time": "11 AM"}}
{"prompt": "what's the phone number for the nearest pharmacy?", "context": "Finds the phone number for a local place.", "function_signature": "get_phone_number(place: str)", "param_annotations": {"place": ["nearest pharmacy"]}, "args": {"place": "nearest pharmacy"}}
{"prompt": "open the Instagram app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Instagram"]}, "args": {"app_name": "Instagram"}}
{"prompt": "what's the weather forecast for the weekend in Miami?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["Miami"], "time_frame": ["the weekend"]}, "args": {"location": "Miami", "time_frame": "the weekend"}}
{"prompt": "find a cooking video on YouTube for a beginner", "context": "Searches for a video on a specific platform.", "function_signature": "search_video(query: str, platform: str)", "param_annotations": {"query": ["cooking video for a beginner"], "platform": ["YouTube"]}, "args": {"query": "cooking video for a beginner", "platform": "YouTube"}}
{"prompt": "convert 10 gallons to liters", "context": "Converts a unit of measurement.", "function_signature": "convert_units(value: int, from_unit: str, to_unit: str)", "param_annotations": {"value": [10], "from_unit": ["gallons"], "to_unit": ["liters"]}, "args": {"value": 10, "from_unit": "gallons", "to_unit": "liters"}}
{"prompt": "what is the longest river in the world?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the longest river in the world?"]}, "args": {"question": "what is the longest river in the world?"}}
{"prompt": "send a text to my brother saying 'Let's grab a coffee.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my brother"], "message": ["Let's grab a coffee."]}, "args": {"to": "my brother", "message": "Let's grab a coffee."}}
{"prompt": "play my 'Workout' playlist", "context": "Plays a specific playlist.", "function_signature": "play_playlist(playlist_name: str)", "param_annotations": {"playlist_name": ["Workout"]}, "args": {"playlist_name": "Workout"}}
{"prompt": "find a recipe for a low-carb pizza", "context": "Finds a recipe with specific dietary requirements.", "function_signature": "find_recipe(food_item: str, dietary_restriction: str)", "param_annotations": {"food_item": ["pizza"], "dietary_restriction": ["low-carb"]}, "args": {"food_item": "pizza", "dietary_restriction": "low-carb"}}
{"prompt": "what's the capital of China?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of China?"]}, "args": {"question": "what's the capital of China?"}}
{"prompt": "set a reminder to 'call the bank' when I get to work", "context": "Sets a location-based reminder.", "function_signature": "set_location_reminder(task: str, location: str)", "param_annotations": {"task": ["call the bank"], "location": ["when I get to work"]}, "args": {"task": "call the bank", "location": "when I get to work"}}
{"prompt": "what's the latest movie review for 'Avatar'?", "context": "Gets movie reviews.", "function_signature": "get_movie_review(movie_title: str)", "param_annotations": {"movie_title": ["Avatar"]}, "args": {"movie_title": "Avatar"}}
{"prompt": "show me the best Mexican restaurants near me", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["Mexican"]}, "args": {"place_type": "restaurants", "cuisine": "Mexican"}}
{"prompt": "open Mozilla Firefox", "context": "Opens a web browser.", "function_signature": "open_web_browser(browser_name: str)", "param_annotations": {"browser_name": ["Mozilla Firefox"]}, "args": {"browser_name": "Mozilla Firefox"}}
{"prompt": "what's the humidity outside?", "context": "Checks the current humidity.", "function_signature": "get_current_humidity()", "param_annotations": {}, "args": {}}
{"prompt": "send an email to 'team_lead@company.com' with subject 'Feedback on presentation' and body 'I have some thoughts to share about the presentation.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["team_lead@company.com"], "subject": ["Feedback on presentation"], "body": ["I have some thoughts to share about the presentation."]}, "args": {"to": "team_lead@company.com", "subject": "Feedback on presentation", "body": "I have some thoughts to share about the presentation."}}
{"prompt": "how many inches are in a foot?", "context": "Answers a general knowledge question about units.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["how many inches are in a foot?"]}, "args": {"question": "how many inches are in a foot?"}}
{"prompt": "add 'buy milk and eggs' to my grocery list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["buy milk and eggs"], "list_name": ["grocery list"]}, "args": {"task": "buy milk and eggs", "list_name": "grocery list"}}
{"prompt": "what's the flight time from London to Tokyo?", "context": "Gets the duration of a flight.", "function_signature": "get_flight_duration(from_city: str, to_city: str)", "param_annotations": {"from_city": ["London"], "to_city": ["Tokyo"]}, "args": {"from_city": "London", "to_city": "Tokyo"}}
{"prompt": "set an alarm for 6:30 AM on weekdays and weekends", "context": "Sets a recurring alarm for all days.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["6:30 AM"], "frequency": ["weekdays and weekends"]}, "args": {"time": "6:30 AM", "frequency": "weekdays and weekends"}}
{"prompt": "open notepad and write 'Draft of the proposal.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Draft of the proposal."]}, "args": {"text": "Draft of the proposal."}}
{"prompt": "what is the national animal of India?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the national animal of India?"]}, "args": {"question": "what is the national animal of India?"}}
{"prompt": "find a movie for the family to watch", "context": "Finds a movie based on a specific category.", "function_signature": "find_movie_by_category(category: str)", "param_annotations": {"category": ["family"]}, "args": {"category": "family"}}
{"prompt": "send a text to my friend saying 'See you at the concert!'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my friend"], "message": ["See you at the concert!"]}, "args": {"to": "my friend", "message": "See you at the concert!"}}
{"prompt": "what's the schedule for the train to the suburbs?", "context": "Gets public transit information.", "function_signature": "get_transit_schedule(transport_type: str, destination: str)", "param_annotations": {"transport_type": ["train"], "destination": ["the suburbs"]}, "args": {"transport_type": "train", "destination": "the suburbs"}}
{"prompt": "open the Amazon app and search for new shoes", "context": "Opens a mobile application and performs a search.", "function_signature": "open_app_and_search(app_name: str, query: str)", "param_annotations": {"app_name": ["Amazon"], "query": ["new shoes"]}, "args": {"app_name": "Amazon", "query": "new shoes"}}
{"prompt": "what's the date of Christmas?", "context": "Gets the date of a specific holiday.", "function_signature": "get_holiday_date(holiday: str)", "param_annotations": {"holiday": ["Christmas"]}, "args": {"holiday": "Christmas"}}
{"prompt": "what's the definition of 'loquacious'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["loquacious"]}, "args": {"word": "loquacious"}}
{"prompt": "find a book about the Roman Empire", "context": "Finds a book on a specific topic.", "function_signature": "find_book_by_topic(topic: str)", "param_annotations": {"topic": ["Roman Empire"]}, "args": {"topic": "Roman Empire"}}
{"prompt": "turn off the smart speaker", "context": "Controls a smart home device.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart speaker"], "state": ["off"]}, "args": {"device": "smart speaker", "state": "off"}}
{"prompt": "what's the distance between New York and Los Angeles?", "context": "Calculates the distance between two locations.", "function_signature": "get_distance_between_locations(location1: str, location2: str)", "param_annotations": {"location1": ["New York"], "location2": ["Los Angeles"]}, "args": {"location1": "New York", "location2": "Los Angeles"}}
{"prompt": "book a hotel in London for 5 nights next month", "context": "Books a hotel.", "function_signature": "book_hotel(location: str, duration_nights: int, time_frame: str)", "param_annotations": {"location": ["London"], "duration_nights": [5], "time_frame": ["next month"]}, "args": {"location": "London", "duration_nights": 5, "time_frame": "next month"}}
{"prompt": "show me the latest news headlines from The New York Times", "context": "Displays news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["The New York Times"]}, "args": {"source": "The New York Times"}}
{"prompt": "what's the average speed of a cheetah?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the average speed of a cheetah?"]}, "args": {"question": "what's the average speed of a cheetah?"}}
{"prompt": "send an email to 'john.doe@email.com' with subject 'Question' and body 'Could you please help me with a few things?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["john.doe@email.com"], "subject": ["Question"], "body": ["Could you please help me with a few things?"]}, "args": {"to": "john.doe@email.com", "subject": "Question", "body": "Could you please help me with a few things?"}}
{"prompt": "set a reminder to 'call the IT department' at 2 PM", "context": "Sets a reminder for a specific task and time.", "function_signature": "set_reminder(task: str, time: str)", "param_annotations": {"task": ["call the IT department"], "time": ["2 PM"]}, "args": {"task": "call the IT department", "time": "2 PM"}}
{"prompt": "what's the stock price of Microsoft?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Microsoft"]}, "args": {"company": "Microsoft"}}
{"prompt": "add a new event 'Lunch with Mom' on Sunday at 1 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Lunch with Mom"], "day": ["Sunday"], "time": ["1 PM"]}, "args": {"title": "Lunch with Mom", "day": "Sunday", "time": "1 PM"}}
{"prompt": "show me directions to the nearest police station", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["nearest police station"]}, "args": {"place": "nearest police station"}}
{"prompt": "what's the weather in Tokyo next weekend?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["Tokyo"], "time_frame": ["next weekend"]}, "args": {"location": "Tokyo", "time_frame": "next weekend"}}
{"prompt": "play some country music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["country"]}, "args": {"genre": "country"}}
{"prompt": "turn off the smart lock", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart lock"], "state": ["off"]}, "args": {"device": "smart lock", "state": "off"}}
{"prompt": "add 'water the plants' to my to-do list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["water the plants"]}, "args": {"task": "water the plants"}}
{"prompt": "what's the next public holiday in Australia?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["Australia"]}, "args": {"country": "Australia"}}
{"prompt": "find a recipe for a healthy smoothie", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["healthy smoothie"]}, "args": {"food_item": "healthy smoothie"}}
{"prompt": "send a text to my sister saying 'How are you?'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my sister"], "message": ["How are you?"]}, "args": {"to": "my sister", "message": "How are you?"}}
{"prompt": "what's the capital of Italy?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Italy?"]}, "args": {"question": "what's the capital of Italy?"}}
{"prompt": "open the Uber app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Uber"]}, "args": {"app_name": "Uber"}}
{"prompt": "set a timer for 5 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["5 minutes"]}, "args": {"duration": "5 minutes"}}
{"prompt": "what's the nutritional information for a slice of pizza?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["slice of pizza"]}, "args": {"food_item": "slice of pizza"}}
{"prompt": "what's the score of the Barcelona game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Barcelona"]}, "args": {"team": "Barcelona"}}
{"prompt": "send an email to 'colleague@work.com' with subject 'Meeting Notes' and body 'Attached are the notes from our meeting.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["colleague@work.com"], "subject": ["Meeting Notes"], "body": ["Attached are the notes from our meeting."]}, "args": {"to": "colleague@work.com", "subject": "Meeting Notes", "body": "Attached are the notes from our meeting."}}
{"prompt": "open notepad and write 'Remember to pack a jacket for the trip.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Remember to pack a jacket for the trip."]}, "args": {"text": "Remember to pack a jacket for the trip."}}
{"prompt": "create a new calendar event 'Haircut' for tomorrow at 4 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Haircut"], "day": ["tomorrow"], "time": ["4 PM"]}, "args": {"title": "Haircut", "day": "tomorrow", "time": "4 PM"}}
{"prompt": "remind me to 'buy a new book' when I'm at the bookstore", "context": "Sets a location-based reminder.", "function_signature": "set_location_reminder(task: str, location: str)", "param_annotations": {"task": ["buy a new book"], "location": ["at the bookstore"]}, "args": {"task": "buy a new book", "location": "at the bookstore"}}
{"prompt": "what's the weather in Berlin on Friday?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, day: str)", "param_annotations": {"location": ["Berlin"], "day": ["Friday"]}, "args": {"location": "Berlin", "day": "Friday"}}
{"prompt": "search for good Chinese restaurants near me", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["Chinese"]}, "args": {"place_type": "restaurants", "cuisine": "Chinese"}}
{"prompt": "open the Netflix app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Netflix"]}, "args": {"app_name": "Netflix"}}
{"prompt": "how many millimeters are in a centimeter?", "context": "Answers a general knowledge question about units.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["how many millimeters are in a centimeter?"]}, "args": {"question": "how many millimeters are in a centimeter?"}}
{"prompt": "find a historical movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["historical"]}, "args": {"genre": "historical"}}
{"prompt": "what's the current time in Dubai?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Dubai"]}, "args": {"location": "Dubai"}}
{"prompt": "book a car from Lyft to go to the grocery store", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Lyft"], "destination": ["the grocery store"]}, "args": {"service": "Lyft", "destination": "the grocery store"}}
{"prompt": "what is the currency of Japan?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the currency of Japan?"]}, "args": {"question": "what is the currency of Japan?"}}
{"prompt": "send a text to my colleague saying 'Did you get the email?'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my colleague"], "message": ["Did you get the email?"]}, "args": {"to": "my colleague", "message": "Did you get the email?"}}
{"prompt": "turn up the music volume to 50", "context": "Controls the volume of a device.", "function_signature": "control_volume(level: int)", "param_annotations": {"level": [50]}, "args": {"level": 50}}
{"prompt": "find a recipe for a vegan pizza", "context": "Finds a recipe with specific dietary requirements.", "function_signature": "find_recipe(food_item: str, dietary_restriction: str)", "param_annotations": {"food_item": ["pizza"], "dietary_restriction": ["vegan"]}, "args": {"food_item": "pizza", "dietary_restriction": "vegan"}}
{"prompt": "what is the tallest mountain in the world?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the tallest mountain in the world?"]}, "args": {"question": "what is the tallest mountain in the world?"}}
{"prompt": "set a recurring alarm for 6:00 AM on weekdays", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["6:00 AM"], "frequency": ["weekdays"]}, "args": {"time": "6:00 AM", "frequency": "weekdays"}}
{"prompt": "what's the next meteor shower?", "context": "Gets information about astronomical events.", "function_signature": "get_astronomical_event_info(event: str)", "param_annotations": {"event": ["meteor shower"]}, "args": {"event": "meteor shower"}}
{"prompt": "show me directions to the nearest coffee shop", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["nearest coffee shop"]}, "args": {"place": "nearest coffee shop"}}
{"prompt": "add 'buy new shoes' to my shopping list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["buy new shoes"], "list_name": ["shopping list"]}, "args": {"task": "buy new shoes", "list_name": "shopping list"}}
{"prompt": "open the Google Maps app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Google Maps"]}, "args": {"app_name": "Google Maps"}}
{"prompt": "what's the weather like in a specific location?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["a specific location"]}, "args": {"location": "a specific location"}}
{"prompt": "send an email to 'john.smith@email.com' with subject 'Hello from the other side' and body 'How are you?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["john.smith@email.com"], "subject": ["Hello from the other side"], "body": ["How are you?"]}, "args": {"to": "john.smith@email.com", "subject": "Hello from the other side", "body": "How are you?"}}
{"prompt": "open notepad and write 'Don't forget the umbrella.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["Don't forget the umbrella."]}, "args": {"text": "Don't forget the umbrella."}}
{"prompt": "set an alarm for 7:20 AM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["7:20 AM"]}, "args": {"time": "7:20 AM"}}
{"prompt": "create a new calendar event for 'Gym' on Wednesday at 6 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Gym"], "day": ["Wednesday"], "time": ["6 PM"]}, "args": {"title": "Gym", "day": "Wednesday", "time": "6 PM"}}
{"prompt": "add 'pay the rent' to my to-do list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["pay the rent"]}, "args": {"task": "pay the rent"}}
{"prompt": "what's the weather like in Rio de Janeiro today?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["Rio de Janeiro"]}, "args": {"location": "Rio de Janeiro"}}
{"prompt": "call my brother", "context": "Initiates a phone call to a contact.", "function_signature": "make_call(contact: str)", "param_annotations": {"contact": ["my brother"]}, "args": {"contact": "my brother"}}
{"prompt": "play some electronic music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["electronic"]}, "args": {"genre": "electronic"}}
{"prompt": "send a text to 'Sarah' saying 'Dinner at 7?'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Sarah"], "message": ["Dinner at 7?"]}, "args": {"to": "Sarah", "message": "Dinner at 7?"}}
{"prompt": "search for the nearest park", "context": "Searches for a specific type of place nearby.", "function_signature": "find_nearby_place(place_type: str)", "param_annotations": {"place_type": ["park"]}, "args": {"place_type": "park"}}
{"prompt": "set a timer for 3 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["3 minutes"]}, "args": {"duration": "3 minutes"}}
{"prompt": "translate 'I love you' to German", "context": "Translates a phrase to another language.", "function_signature": "translate_text(text: str, language: str)", "param_annotations": {"text": ["I love you"], "language": ["German"]}, "args": {"text": "I love you", "language": "German"}}
{"prompt": "take a screenshot", "context": "Takes a screenshot.", "function_signature": "take_screenshot()", "param_annotations": {}, "args": {}}
{"prompt": "what's my flight status for American Airlines flight 789?", "context": "Checks the status of a flight.", "function_signature": "get_flight_status(airline: str, flight_number: str)", "param_annotations": {"airline": ["American Airlines"], "flight_number": ["789"]}, "args": {"airline": "American Airlines", "flight_number": "789"}}
{"prompt": "order a salad from Panera Bread", "context": "Orders food from a restaurant.", "function_signature": "order_food(restaurant: str, item: str)", "param_annotations": {"restaurant": ["Panera Bread"], "item": ["salad"]}, "args": {"restaurant": "Panera Bread", "item": "salad"}}
{"prompt": "find a recipe for a vegan burger", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["vegan burger"]}, "args": {"food_item": "vegan burger"}}
{"prompt": "turn off the smart plug", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart plug"], "state": ["off"]}, "args": {"device": "smart plug", "state": "off"}}
{"prompt": "show me directions to the closest gas station", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest gas station"]}, "args": {"place": "closest gas station"}}
{"prompt": "what's the capital of Russia?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Russia?"]}, "args": {"question": "what's the capital of Russia?"}}
{"prompt": "book a table for six at The Mexican Grill for 7:30 PM tonight", "context": "Books a reservation at a restaurant.", "function_signature": "book_restaurant_table(restaurant: str, party_size: int, time: str, date: str)", "param_annotations": {"restaurant": ["The Mexican Grill"], "party_size": [6], "time": ["7:30 PM"], "date": ["tonight"]}, "args": {"restaurant": "The Mexican Grill", "party_size": 6, "time": "7:30 PM", "date": "tonight"}}
{"prompt": "how many calories are in a medium apple?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["medium apple"]}, "args": {"food_item": "medium apple"}}
{"prompt": "find a good action movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["action"]}, "args": {"genre": "action"}}
{"prompt": "what's the stock price of Amazon?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Amazon"]}, "args": {"company": "Amazon"}}
{"prompt": "remind me to 'buy a new laptop' in 2 weeks", "context": "Sets a reminder.", "function_signature": "set_reminder(task: str, time_frame: str)", "param_annotations": {"task": ["buy a new laptop"], "time_frame": ["in 2 weeks"]}, "args": {"task": "buy a new laptop", "time_frame": "in 2 weeks"}}
{"prompt": "open the Lyft app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Lyft"]}, "args": {"app_name": "Lyft"}}
{"prompt": "what time is it in Paris?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Paris"]}, "args": {"location": "Paris"}}
{"prompt": "show me the latest headlines from Reuters", "context": "Displays the latest news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["Reuters"]}, "args": {"source": "Reuters"}}
{"prompt": "tell me a fun fact about animals", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["animals"]}, "args": {"topic": "animals"}}
{"prompt": "calculate 25% of 500", "context": "Performs a mathematical calculation.", "function_signature": "calculate(expression: str)", "param_annotations": {"expression": ["25% of 500"]}, "args": {"expression": "25% of 500"}}
{"prompt": "what's the definition of 'benevolent'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["benevolent"]}, "args": {"word": "benevolent"}}
{"prompt": "turn off the smart lights", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart lights"], "state": ["off"]}, "args": {"device": "smart lights", "state": "off"}}
{"prompt": "who is the CEO of Apple?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["who is the CEO of Apple?"]}, "args": {"question": "who is the CEO of Apple?"}}
{"prompt": "send an email to my colleague with subject 'Question about the report' and body 'I have a quick question about the data.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["my colleague"], "subject": ["Question about the report"], "body": ["I have a quick question about the data."]}, "args": {"to": "my colleague", "subject": "Question about the report", "body": "I have a quick question about the data."}}
{"prompt": "what's on my schedule for Wednesday?", "context": "Checks the user's schedule.", "function_signature": "get_schedule_for_day(day: str)", "param_annotations": {"day": ["Wednesday"]}, "args": {"day": "Wednesday"}}
{"prompt": "find a good place for lunch tomorrow", "context": "Finds a place for a specific meal.", "function_signature": "find_restaurant_for_meal(meal: str, date: str)", "param_annotations": {"meal": ["lunch"], "date": ["tomorrow"]}, "args": {"meal": "lunch", "date": "tomorrow"}}
{"prompt": "play 'Hotel California' by Eagles on Pandora", "context": "Plays a specific song on a music service.", "function_signature": "play_song(song_title: str, artist: str, service: str)", "param_annotations": {"song_title": ["Hotel California"], "artist": ["Eagles"], "service": ["Pandora"]}, "args": {"song_title": "Hotel California", "artist": "Eagles", "service": "Pandora"}}
{"prompt": "what's the population of Germany?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the population of Germany?"]}, "args": {"question": "what's the population of Germany?"}}
{"prompt": "set a recurring alarm for 8:00 AM on weekdays", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["8:00 AM"], "frequency": ["weekdays"]}, "args": {"time": "8:00 AM", "frequency": "weekdays"}}
{"prompt": "add 'send the report' to my work to-do list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["send the report"], "list_name": ["work"]}, "args": {"task": "send the report", "list_name": "work"}}
{"prompt": "what's the exchange rate from GBP to USD?", "context": "Gets the currency exchange rate.", "function_signature": "get_exchange_rate(from_currency: str, to_currency: str)", "param_annotations": {"from_currency": ["GBP"], "to_currency": ["USD"]}, "args": {"from_currency": "GBP", "to_currency": "USD"}}
{"prompt": "show me pictures of mountains", "context": "Searches for images.", "function_signature": "search_images(query: str)", "param_annotations": {"query": ["mountains"]}, "args": {"query": "mountains"}}
{"prompt": "turn up the thermostat to 75 degrees", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, setting: str)", "param_annotations": {"device": ["thermostat"], "setting": ["75 degrees"]}, "args": {"device": "thermostat", "setting": "75 degrees"}}
{"prompt": "what's the next public holiday in France?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["France"]}, "args": {"country": "France"}}
{"prompt": "navigate to the nearest hotel", "context": "Navigates to a specific place.", "function_signature": "navigate_to_place(place: str)", "param_annotations": {"place": ["nearest hotel"]}, "args": {"place": "nearest hotel"}}
{"prompt": "book a flight to New York for next weekend", "context": "Books a flight.", "function_signature": "book_flight(destination: str, date: str)", "param_annotations": {"destination": ["New York"], "date": ["next weekend"]}, "args": {"destination": "New York", "date": "next weekend"}}
{"prompt": "find a good fantasy book to read", "context": "Finds a book of a specific genre.", "function_signature": "find_book_by_genre(genre: str)", "param_annotations": {"genre": ["fantasy"]}, "args": {"genre": "fantasy"}}
{"prompt": "what's the score of the Real Madrid game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Real Madrid"]}, "args": {"team": "Real Madrid"}}
{"prompt": "order a car from Lyft to go to the airport", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Lyft"], "destination": ["the airport"]}, "args": {"service": "Lyft", "destination": "the airport"}}
{"prompt": "what is the capital of Egypt?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the capital of Egypt?"]}, "args": {"question": "what is the capital of Egypt?"}}
{"prompt": "tell me a fun fact about science", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["science"]}, "args": {"topic": "science"}}
{"prompt": "set a timer for a 60-minute workout", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str, purpose: str)", "param_annotations": {"duration": ["60-minute"], "purpose": ["workout"]}, "args": {"duration": "60-minute", "purpose": "workout"}}
{"prompt": "add an event 'Team Lunch' to my calendar on Friday at 1 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Team Lunch"], "day": ["Friday"], "time": ["1 PM"]}, "args": {"title": "Team Lunch", "day": "Friday", "time": "1 PM"}}
{"prompt": "what's the phone number for the nearest police station?", "context": "Finds the phone number for a local place.", "function_signature": "get_phone_number(place: str)", "param_annotations": {"place": ["nearest police station"]}, "args": {"place": "nearest police station"}}
{"prompt": "open the Snapchat app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Snapchat"]}, "args": {"app_name": "Snapchat"}}
{"prompt": "what's the weather forecast for the weekend in Seattle?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["Seattle"], "time_frame": ["the weekend"]}, "args": {"location": "Seattle", "time_frame": "the weekend"}}
{"prompt": "find a music video on YouTube for a popular song", "context": "Searches for a video on a specific platform.", "function_signature": "search_video(query: str, platform: str)", "param_annotations": {"query": ["music video for a popular song"], "platform": ["YouTube"]}, "args": {"query": "music video for a popular song", "platform": "YouTube"}}
{"prompt": "convert 100 kilograms to pounds", "context": "Converts a unit of measurement.", "function_signature": "convert_units(value: int, from_unit: str, to_unit: str)", "param_annotations": {"value": [100], "from_unit": ["kilograms"], "to_unit": ["pounds"]}, "args": {"value": 100, "from_unit": "kilograms", "to_unit": "pounds"}}
{"prompt": "what is the largest desert in the world?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the largest desert in the world?"]}, "args": {"question": "what is the largest desert in the world?"}}
{"prompt": "send a text to 'my mom' saying 'I'm coming over for dinner.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my mom"], "message": ["I'm coming over for dinner."]}, "args": {"to": "my mom", "message": "I'm coming over for dinner."}}
{"prompt": "play my 'Road Trip' playlist", "context": "Plays a specific playlist.", "function_signature": "play_playlist(playlist_name: str)", "param_annotations": {"playlist_name": ["Road Trip"]}, "args": {"playlist_name": "Road Trip"}}
{"prompt": "find a recipe for a healthy breakfast", "context": "Finds a recipe with a specific health focus.", "function_signature": "find_recipe(food_item: str, health_focus: str)", "param_annotations": {"food_item": ["breakfast"], "health_focus": ["healthy"]}, "args": {"food_item": "breakfast", "health_focus": "healthy"}}
{"prompt": "what's the capital of Spain?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Spain?"]}, "args": {"question": "what's the capital of Spain?"}}
{"prompt": "set a reminder to 'call the dentist' at 10 AM tomorrow", "context": "Sets a reminder for a specific task and time.", "function_signature": "set_reminder(task: str, time: str, date: str)", "param_annotations": {"task": ["call the dentist"], "time": ["10 AM"], "date": ["tomorrow"]}, "args": {"task": "call the dentist", "time": "10 AM", "date": "tomorrow"}}
{"prompt": "what's the latest movie review for 'The Matrix'?", "context": "Gets movie reviews.", "function_signature": "get_movie_review(movie_title: str)", "param_annotations": {"movie_title": ["The Matrix"]}, "args": {"movie_title": "The Matrix"}}
{"prompt": "show me the best Indian restaurants near me", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["Indian"]}, "args": {"place_type": "restaurants", "cuisine": "Indian"}}
{"prompt": "open the Facebook app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Facebook"]}, "args": {"app_name": "Facebook"}}
{"prompt": "what's the current time in Tokyo?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Tokyo"]}, "args": {"location": "Tokyo"}}
{"prompt": "send an email to 'team@company.com' with subject 'Project update' and body 'The project is on track.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["team@company.com"], "subject": ["Project update"], "body": ["The project is on track."]}, "args": {"to": "team@company.com", "subject": "Project update", "body": "The project is on track."}}
{"prompt": "open notepad and write 'This is the draft of my essay.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["This is the draft of my essay."]}, "args": {"text": "This is the draft of my essay."}}
{"prompt": "set an alarm for 8:15 AM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["8:15 AM"]}, "args": {"time": "8:15 AM"}}
{"prompt": "create a new calendar event for 'Call with Mark' on Monday at 3 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Call with Mark"], "day": ["Monday"], "time": ["3 PM"]}, "args": {"title": "Call with Mark", "day": "Monday", "time": "3 PM"}}
{"prompt": "add 'buy coffee beans' to my grocery list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["buy coffee beans"]}, "args": {"task": "buy coffee beans"}}
{"prompt": "what's the weather like in Seattle on Saturday?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["Seattle"]}, "args": {"location": "Seattle"}}
{"prompt": "call my friend", "context": "Initiates a phone call to a contact.", "function_signature": "make_call(contact: str)", "param_annotations": {"contact": ["my friend"]}, "args": {"contact": "my friend"}}
{"prompt": "play some classical music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["classical"]}, "args": {"genre": "classical"}}
{"prompt": "send a text to 'Dad' saying 'See you soon.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Dad"], "message": ["See you soon."]}, "args": {"to": "Dad", "message": "See you soon."}}
{"prompt": "search for the nearest gym", "context": "Searches for a specific type of place nearby.", "function_signature": "find_nearby_place(place_type: str)", "param_annotations": {"place_type": ["gym"]}, "args": {"place_type": "gym"}}
{"prompt": "set a timer for 25 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["25 minutes"]}, "args": {"duration": "25 minutes"}}
{"prompt": "translate 'Thank you' to Japanese", "context": "Translates a phrase to another language.", "function_signature": "translate_text(text: str, language: str)", "param_annotations": {"text": ["Thank you"], "language": ["Japanese"]}, "args": {"text": "Thank you", "language": "Japanese"}}
{"prompt": "take a selfie", "context": "Takes a selfie.", "function_signature": "take_selfie()", "param_annotations": {}, "args": {}}
{"prompt": "what's my flight status for Southwest flight 987?", "context": "Checks the status of a flight.", "function_signature": "get_flight_status(airline: str, flight_number: str)", "param_annotations": {"airline": ["Southwest"], "flight_number": ["987"]}, "args": {"airline": "Southwest", "flight_number": "987"}}
{"prompt": "order a burrito from Chipotle", "context": "Orders food from a restaurant.", "function_signature": "order_food(restaurant: str, item: str)", "param_annotations": {"restaurant": ["Chipotle"], "item": ["burrito"]}, "args": {"restaurant": "Chipotle", "item": "burrito"}}
{"prompt": "find a recipe for a healthy salad", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["healthy salad"]}, "args": {"food_item": "healthy salad"}}
{"prompt": "turn on the vacuum cleaner", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["vacuum cleaner"], "state": ["on"]}, "args": {"device": "vacuum cleaner", "state": "on"}}
{"prompt": "show me directions to the closest movie theater", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest movie theater"]}, "args": {"place": "closest movie theater"}}
{"prompt": "what's the capital of Portugal?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Portugal?"]}, "args": {"question": "what's the capital of Portugal?"}}
{"prompt": "book a table for two at The Sushi Bar for 6:30 PM tomorrow", "context": "Books a reservation at a restaurant.", "function_signature": "book_restaurant_table(restaurant: str, party_size: int, time: str, date: str)", "param_annotations": {"restaurant": ["The Sushi Bar"], "party_size": [2], "time": ["6:30 PM"], "date": ["tomorrow"]}, "args": {"restaurant": "The Sushi Bar", "party_size": 2, "time": "6:30 PM", "date": "tomorrow"}}
{"prompt": "how many calories are in a small coffee?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["small coffee"]}, "args": {"food_item": "small coffee"}}
{"prompt": "find a good thriller movie to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["thriller"]}, "args": {"genre": "thriller"}}
{"prompt": "what's the stock price of Coca-Cola?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Coca-Cola"]}, "args": {"company": "Coca-Cola"}}
{"prompt": "remind me to 'buy a birthday card' in 3 days", "context": "Sets a reminder.", "function_signature": "set_reminder(task: str, time_frame: str)", "param_annotations": {"task": ["buy a birthday card"], "time_frame": ["in 3 days"]}, "args": {"task": "buy a birthday card", "time_frame": "in 3 days"}}
{"prompt": "open the YouTube app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["YouTube"]}, "args": {"app_name": "YouTube"}}
{"prompt": "what time is it in Los Angeles?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Los Angeles"]}, "args": {"location": "Los Angeles"}}
{"prompt": "show me the latest headlines from Fox News", "context": "Displays the latest news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["Fox News"]}, "args": {"source": "Fox News"}}
{"prompt": "tell me a fun fact about geography", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["geography"]}, "args": {"topic": "geography"}}
{"prompt": "calculate 50 divided by 5", "context": "Performs a mathematical calculation.", "function_signature": "calculate(expression: str)", "param_annotations": {"expression": ["50 divided by 5"]}, "args": {"expression": "50 divided by 5"}}
{"prompt": "what's the definition of 'gregarious'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["gregarious"]}, "args": {"word": "gregarious"}}
{"prompt": "turn off the smart vacuum", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart vacuum"], "state": ["off"]}, "args": {"device": "smart vacuum", "state": "off"}}
{"prompt": "who is the current Prime Minister of Canada?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["who is the current Prime Minister of Canada?"]}, "args": {"question": "who is the current Prime Minister of Canada?"}}
{"prompt": "send an email to 'manager@work.com' with subject 'Time off request' and body 'I would like to request two days off next week.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["manager@work.com"], "subject": ["Time off request"], "body": ["I would like to request two days off next week."]}, "args": {"to": "manager@work.com", "subject": "Time off request", "body": "I would like to request two days off next week."}}
{"prompt": "what's on my schedule for Thursday?", "context": "Checks the user's schedule.", "function_signature": "get_schedule_for_day(day: str)", "param_annotations": {"day": ["Thursday"]}, "args": {"day": "Thursday"}}
{"prompt": "find a good place for coffee now", "context": "Finds a place for a specific meal.", "function_signature": "find_restaurant_for_meal(meal: str, date: str)", "param_annotations": {"meal": ["coffee"], "date": ["now"]}, "args": {"meal": "coffee", "date": "now"}}
{"prompt": "play 'Happy' by Pharrell Williams on YouTube Music", "context": "Plays a specific song on a music service.", "function_signature": "play_song(song_title: str, artist: str, service: str)", "param_annotations": {"song_title": ["Happy"], "artist": ["Pharrell Williams"], "service": ["YouTube Music"]}, "args": {"song_title": "Happy", "artist": "Pharrell Williams", "service": "YouTube Music"}}
{"prompt": "what's the population of the UK?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the population of the UK?"]}, "args": {"question": "what's the population of the UK?"}}
{"prompt": "set a recurring alarm for 7:30 AM on weekends", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["7:30 AM"], "frequency": ["weekends"]}, "args": {"time": "7:30 AM", "frequency": "weekends"}}
{"prompt": "add 'buy concert tickets' to my personal to-do list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["buy concert tickets"], "list_name": ["personal"]}, "args": {"task": "buy concert tickets", "list_name": "personal"}}
{"prompt": "what's the exchange rate from AUD to USD?", "context": "Gets the currency exchange rate.", "function_signature": "get_exchange_rate(from_currency: str, to_currency: str)", "param_annotations": {"from_currency": ["AUD"], "to_currency": ["USD"]}, "args": {"from_currency": "AUD", "to_currency": "USD"}}
{"prompt": "show me pictures of beaches", "context": "Searches for images.", "function_signature": "search_images(query: str)", "param_annotations": {"query": ["beaches"]}, "args": {"query": "beaches"}}
{"prompt": "turn down the thermostat to 70 degrees", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, setting: str)", "param_annotations": {"device": ["thermostat"], "setting": ["70 degrees"]}, "args": {"device": "thermostat", "setting": "70 degrees"}}
{"prompt": "what's the next public holiday in Germany?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["Germany"]}, "args": {"country": "Germany"}}
{"prompt": "navigate to the closest bank", "context": "Navigates to a specific place.", "function_signature": "navigate_to_place(place: str)", "param_annotations": {"place": ["closest bank"]}, "args": {"place": "closest bank"}}
{"prompt": "book a flight to a city in Italy for next month", "context": "Books a flight.", "function_signature": "book_flight(destination: str, date: str)", "param_annotations": {"destination": ["a city in Italy"], "date": ["next month"]}, "args": {"destination": "a city in Italy", "date": "next month"}}
{"prompt": "find a good historical fiction book to read", "context": "Finds a book of a specific genre.", "function_signature": "find_book_by_genre(genre: str)", "param_annotations": {"genre": ["historical fiction"]}, "args": {"genre": "historical fiction"}}
{"prompt": "what's the score of the Boston Celtics game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Boston Celtics"]}, "args": {"team": "Boston Celtics"}}
{"prompt": "order a car from Uber to go to the grocery store", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Uber"], "destination": ["the grocery store"]}, "args": {"service": "Uber", "destination": "the grocery store"}}
{"prompt": "what is the currency of Brazil?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the currency of Brazil?"]}, "args": {"question": "what is the currency of Brazil?"}}
{"prompt": "tell me a fun fact about the human body", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["the human body"]}, "args": {"topic": "the human body"}}
{"prompt": "set a timer for a 1-hour meeting", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str, purpose: str)", "param_annotations": {"duration": ["1-hour"], "purpose": ["meeting"]}, "args": {"duration": "1-hour", "purpose": "meeting"}}
{"prompt": "add an event 'Doctor Appointment' to my calendar on Friday at 2 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Doctor Appointment"], "day": ["Friday"], "time": ["2 PM"]}, "args": {"title": "Doctor Appointment", "day": "Friday", "time": "2 PM"}}
{"prompt": "what's the phone number for the nearest hospital?", "context": "Finds the phone number for a local place.", "function_signature": "get_phone_number(place: str)", "param_annotations": {"place": ["nearest hospital"]}, "args": {"place": "nearest hospital"}}
{"prompt": "open the WhatsApp app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["WhatsApp"]}, "args": {"app_name": "WhatsApp"}}
{"prompt": "what's the weather forecast for the weekend in London?", "context": "Checks the weather forecast.", "function_signature": "get_weather_forecast(location: str, time_frame: str)", "param_annotations": {"location": ["London"], "time_frame": ["the weekend"]}, "args": {"location": "London", "time_frame": "the weekend"}}
{"prompt": "find a comedy video on YouTube for a fun night", "context": "Searches for a video on a specific platform.", "function_signature": "search_video(query: str, platform: str)", "param_annotations": {"query": ["comedy video for a fun night"], "platform": ["YouTube"]}, "args": {"query": "comedy video for a fun night", "platform": "YouTube"}}
{"prompt": "convert 5 kilograms to pounds", "context": "Converts a unit of measurement.", "function_signature": "convert_units(value: int, from_unit: str, to_unit: str)", "param_annotations": {"value": [5], "from_unit": ["kilograms"], "to_unit": ["pounds"]}, "args": {"value": 5, "from_unit": "kilograms", "to_unit": "pounds"}}
{"prompt": "what is the smallest country in the world?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the smallest country in the world?"]}, "args": {"question": "what is the smallest country in the world?"}}
{"prompt": "send a text to 'my dad' saying 'I'm running late.'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["my dad"], "message": ["I'm running late."]}, "args": {"to": "my dad", "message": "I'm running late."}}
{"prompt": "play my 'Chill' playlist", "context": "Plays a specific playlist.", "function_signature": "play_playlist(playlist_name: str)", "param_annotations": {"playlist_name": ["Chill"]}, "args": {"playlist_name": "Chill"}}
{"prompt": "find a recipe for a low-fat dessert", "context": "Finds a recipe with specific dietary requirements.", "function_signature": "find_recipe(food_item: str, dietary_restriction: str)", "param_annotations": {"food_item": ["dessert"], "dietary_restriction": ["low-fat"]}, "args": {"food_item": "dessert", "dietary_restriction": "low-fat"}}
{"prompt": "what's the capital of Argentina?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Argentina?"]}, "args": {"question": "what's the capital of Argentina?"}}
{"prompt": "set a reminder to 'pick up the kids' when I get home", "context": "Sets a location-based reminder.", "function_signature": "set_location_reminder(task: str, location: str)", "param_annotations": {"task": ["pick up the kids"], "location": ["when I get home"]}, "args": {"task": "pick up the kids", "location": "when I get home"}}
{"prompt": "what's the latest movie review for 'Inception'?", "context": "Gets movie reviews.", "function_signature": "get_movie_review(movie_title: str)", "param_annotations": {"movie_title": ["Inception"]}, "args": {"movie_title": "Inception"}}
{"prompt": "show me the best Greek restaurants near me", "context": "Searches for a specific type of restaurant.", "function_signature": "find_nearby_place(place_type: str, cuisine: str)", "param_annotations": {"place_type": ["restaurants"], "cuisine": ["Greek"]}, "args": {"place_type": "restaurants", "cuisine": "Greek"}}
{"prompt": "open the Twitter app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Twitter"]}, "args": {"app_name": "Twitter"}}
{"prompt": "what's the current time in Dubai?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["Dubai"]}, "args": {"location": "Dubai"}}
{"prompt": "send an email to 'friend@example.com' with subject 'Hi there' and body 'How are you?'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["friend@example.com"], "subject": ["Hi there"], "body": ["How are you?"]}, "args": {"to": "friend@example.com", "subject": "Hi there", "body": "How are you?"}}
{"prompt": "open notepad and write 'This is the draft of my blog post.'", "context": "Opens notepad and writes text.", "function_signature": "open_notepad_with_text(text: str)", "param_annotations": {"text": ["This is the draft of my blog post."]}, "args": {"text": "This is the draft of my blog post."}}
{"prompt": "set an alarm for 6:45 AM", "context": "Sets an alarm for the given time.", "function_signature": "set_alarm(time: str)", "param_annotations": {"time": ["6:45 AM"]}, "args": {"time": "6:45 AM"}}
{"prompt": "create a new calendar event for 'Dentist Appointment' on Tuesday at 10 AM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Dentist Appointment"], "day": ["Tuesday"], "time": ["10 AM"]}, "args": {"title": "Dentist Appointment", "day": "Tuesday", "time": "10 AM"}}
{"prompt": "add 'buy printer ink' to my shopping list", "context": "Adds a task to the to-do list.", "function_signature": "add_to_todolist(task: str)", "param_annotations": {"task": ["buy printer ink"]}, "args": {"task": "buy printer ink"}}
{"prompt": "what's the weather like in Tokyo today?", "context": "Checks the weather for a specific location.", "function_signature": "get_weather(location: str)", "param_annotations": {"location": ["Tokyo"]}, "args": {"location": "Tokyo"}}
{"prompt": "call my mom", "context": "Initiates a phone call to a contact.", "function_signature": "make_call(contact: str)", "param_annotations": {"contact": ["my mom"]}, "args": {"contact": "my mom"}}
{"prompt": "play some instrumental music", "context": "Plays music of a specific genre.", "function_signature": "play_music(genre: str)", "param_annotations": {"genre": ["instrumental"]}, "args": {"genre": "instrumental"}}
{"prompt": "send a text to 'Mom' saying 'Happy Mother's Day!'", "context": "Sends a text message to a contact.", "function_signature": "send_text(to: str, message: str)", "param_annotations": {"to": ["Mom"], "message": ["Happy Mother's Day!"]}, "args": {"to": "Mom", "message": "Happy Mother's Day!"}}
{"prompt": "search for the nearest supermarket", "context": "Searches for a specific type of place nearby.", "function_signature": "find_nearby_place(place_type: str)", "param_annotations": {"place_type": ["supermarket"]}, "args": {"place_type": "supermarket"}}
{"prompt": "set a timer for 50 minutes", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str)", "param_annotations": {"duration": ["50 minutes"]}, "args": {"duration": "50 minutes"}}
{"prompt": "translate 'Where is the nearest cafe?' to Spanish", "context": "Translates a phrase to another language.", "function_signature": "translate_text(text: str, language: str)", "param_annotations": {"text": ["Where is the nearest cafe?"], "language": ["Spanish"]}, "args": {"text": "Where is the nearest cafe?", "language": "Spanish"}}
{"prompt": "what's my flight status for United Airlines flight 123?", "context": "Checks the status of a flight.", "function_signature": "get_flight_status(airline: str, flight_number: str)", "param_annotations": {"airline": ["United Airlines"], "flight_number": ["123"]}, "args": {"airline": "United Airlines", "flight_number": "123"}}
{"prompt": "order a pizza from Domino's", "context": "Orders food from a restaurant.", "function_signature": "order_food(restaurant: str, item: str)", "param_annotations": {"restaurant": ["Domino's"], "item": ["pizza"]}, "args": {"restaurant": "Domino's", "item": "pizza"}}
{"prompt": "find a recipe for a chocolate cake", "context": "Finds a recipe for a specific food item.", "function_signature": "find_recipe(food_item: str)", "param_annotations": {"food_item": ["chocolate cake"]}, "args": {"food_item": "chocolate cake"}}
{"prompt": "turn on the TV in the living room", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str, room: str)", "param_annotations": {"device": ["TV"], "state": ["on"], "room": ["living room"]}, "args": {"device": "TV", "state": "on", "room": "living room"}}
{"prompt": "show me directions to the closest airport", "context": "Provides navigation directions.", "function_signature": "get_directions_to_place(place: str)", "param_annotations": {"place": ["closest airport"]}, "args": {"place": "closest airport"}}
{"prompt": "what's the capital of Germany?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the capital of Germany?"]}, "args": {"question": "what's the capital of Germany?"}}
{"prompt": "book a table for eight at The Chinese Garden for 9 PM tonight", "context": "Books a reservation at a restaurant.", "function_signature": "book_restaurant_table(restaurant: str, party_size: int, time: str, date: str)", "param_annotations": {"restaurant": ["The Chinese Garden"], "party_size": [8], "time": ["9 PM"], "date": ["tonight"]}, "args": {"restaurant": "The Chinese Garden", "party_size": 8, "time": "9 PM", "date": "tonight"}}
{"prompt": "how many calories are in a chocolate chip cookie?", "context": "Gets nutritional information for a food item.", "function_signature": "get_nutritional_info(food_item: str)", "param_annotations": {"food_item": ["chocolate chip cookie"]}, "args": {"food_item": "chocolate chip cookie"}}
{"prompt": "find a good romantic comedy to watch", "context": "Finds a movie of a specific genre.", "function_signature": "find_movie_by_genre(genre: str)", "param_annotations": {"genre": ["romantic comedy"]}, "args": {"genre": "romantic comedy"}}
{"prompt": "what's the stock price of Pepsi?", "context": "Gets the current stock price for a company.", "function_signature": "get_stock_price(company: str)", "param_annotations": {"company": ["Pepsi"]}, "args": {"company": "Pepsi"}}
{"prompt": "remind me to 'call the plumber' tomorrow at 9 AM", "context": "Sets a reminder.", "function_signature": "set_reminder(task: str, date: str, time: str)", "param_annotations": {"task": ["call the plumber"], "date": ["tomorrow"], "time": ["9 AM"]}, "args": {"task": "call the plumber", "date": "tomorrow", "time": "9 AM"}}
{"prompt": "open the Google Drive app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Google Drive"]}, "args": {"app_name": "Google Drive"}}
{"prompt": "what time is it in New York?", "context": "Gets the current time for a specific location.", "function_signature": "get_time_in_location(location: str)", "param_annotations": {"location": ["New York"]}, "args": {"location": "New York"}}
{"prompt": "show me the latest headlines from The Wall Street Journal", "context": "Displays the latest news from a specific source.", "function_signature": "get_news_headlines_from_source(source: str)", "param_annotations": {"source": ["The Wall Street Journal"]}, "args": {"source": "The Wall Street Journal"}}
{"prompt": "tell me a fun fact about technology", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["technology"]}, "args": {"topic": "technology"}}
{"prompt": "calculate the area of a circle with radius 5", "context": "Performs a mathematical calculation.", "function_signature": "calculate(expression: str)", "param_annotations": {"expression": ["the area of a circle with radius 5"]}, "args": {"expression": "the area of a circle with radius 5"}}
{"prompt": "what's the definition of 'obfuscate'?", "context": "Provides the definition of a word.", "function_signature": "get_definition(word: str)", "param_annotations": {"word": ["obfuscate"]}, "args": {"word": "obfuscate"}}
{"prompt": "turn off the smart blinds", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, state: str)", "param_annotations": {"device": ["smart blinds"], "state": ["off"]}, "args": {"device": "smart blinds", "state": "off"}}
{"prompt": "who is the current Queen of England?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["who is the current Queen of England?"]}, "args": {"question": "who is the current Queen of England?"}}
{"prompt": "send an email to 'team_member@company.com' with subject 'Feedback on presentation' and body 'I have some thoughts to share about the presentation.'", "context": "Sends an email to the recipient with subject and body.", "function_signature": "send_email(to: str, subject: str, body: str)", "param_annotations": {"to": ["team_member@company.com"], "subject": ["Feedback on presentation"], "body": ["I have some thoughts to share about the presentation."]}, "args": {"to": "team_member@company.com", "subject": "Feedback on presentation", "body": "I have some thoughts to share about the presentation."}}
{"prompt": "what's on my schedule for Saturday?", "context": "Checks the user's schedule.", "function_signature": "get_schedule_for_day(day: str)", "param_annotations": {"day": ["Saturday"]}, "args": {"day": "Saturday"}}
{"prompt": "find a good place for dinner tonight", "context": "Finds a place for a specific meal.", "function_signature": "find_restaurant_for_meal(meal: str, date: str)", "param_annotations": {"meal": ["dinner"], "date": ["tonight"]}, "args": {"meal": "dinner", "date": "tonight"}}
{"prompt": "play 'Don't Stop Believin'' by Journey on Spotify", "context": "Plays a specific song on a music service.", "function_signature": "play_song(song_title: str, artist: str, service: str)", "param_annotations": {"song_title": ["Don't Stop Believin'"], "artist": ["Journey"], "service": ["Spotify"]}, "args": {"song_title": "Don't Stop Believin'", "artist": "Journey", "service": "Spotify"}}
{"prompt": "what's the population of Russia?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what's the population of Russia?"]}, "args": {"question": "what's the population of Russia?"}}
{"prompt": "set a recurring alarm for 6:00 AM on weekdays", "context": "Sets a recurring alarm.", "function_signature": "set_recurring_alarm(time: str, frequency: str)", "param_annotations": {"time": ["6:00 AM"], "frequency": ["weekdays"]}, "args": {"time": "6:00 AM", "frequency": "weekdays"}}
{"prompt": "add 'finish the report' to my work to-do list", "context": "Adds a task to a specific to-do list.", "function_signature": "add_to_todolist(task: str, list_name: str)", "param_annotations": {"task": ["finish the report"], "list_name": ["work"]}, "args": {"task": "finish the report", "list_name": "work"}}
{"prompt": "what's the exchange rate from EUR to JPY?", "context": "Gets the currency exchange rate.", "function_signature": "get_exchange_rate(from_currency: str, to_currency: str)", "param_annotations": {"from_currency": ["EUR"], "to_currency": ["JPY"]}, "args": {"from_currency": "EUR", "to_currency": "JPY"}}
{"prompt": "show me pictures of waterfalls", "context": "Searches for images.", "function_signature": "search_images(query: str)", "param_annotations": {"query": ["waterfalls"]}, "args": {"query": "waterfalls"}}
{"prompt": "turn down the thermostat to 65 degrees", "context": "Controls smart home devices.", "function_signature": "control_smarthome_device(device: str, setting: str)", "param_annotations": {"device": ["thermostat"], "setting": ["65 degrees"]}, "args": {"device": "thermostat", "setting": "65 degrees"}}
{"prompt": "what's the next public holiday in Japan?", "context": "Gets information about upcoming holidays.", "function_signature": "get_next_holiday(country: str)", "param_annotations": {"country": ["Japan"]}, "args": {"country": "Japan"}}
{"prompt": "navigate to the closest coffee shop", "context": "Navigates to a specific place.", "function_signature": "navigate_to_place(place: str)", "param_annotations": {"place": ["closest coffee shop"]}, "args": {"place": "closest coffee shop"}}
{"prompt": "book a flight to a city in Canada for next month", "context": "Books a flight.", "function_signature": "book_flight(destination: str, date: str)", "param_annotations": {"destination": ["a city in Canada"], "date": ["next month"]}, "args": {"destination": "a city in Canada", "date": "next month"}}
{"prompt": "find a good mystery book to read", "context": "Finds a book of a specific genre.", "function_signature": "find_book_by_genre(genre: str)", "param_annotations": {"genre": ["mystery"]}, "args": {"genre": "mystery"}}
{"prompt": "what's the score of the Dallas Cowboys game?", "context": "Gets the score of a sports game.", "function_signature": "get_game_score(team: str)", "param_annotations": {"team": ["Dallas Cowboys"]}, "args": {"team": "Dallas Cowboys"}}
{"prompt": "order a car from Lyft to go to the train station", "context": "Orders a ride-sharing service.", "function_signature": "order_ride(service: str, destination: str)", "param_annotations": {"service": ["Lyft"], "destination": ["the train station"]}, "args": {"service": "Lyft", "destination": "the train station"}}
{"prompt": "what is the currency of Russia?", "context": "Answers a general knowledge question.", "function_signature": "answer_question(question: str)", "param_annotations": {"question": ["what is the currency of Russia?"]}, "args": {"question": "what is the currency of Russia?"}}
{"prompt": "tell me a fun fact about space exploration", "context": "Tells a fun fact about a specific topic.", "function_signature": "tell_fun_fact(topic: str)", "param_annotations": {"topic": ["space exploration"]}, "args": {"topic": "space exploration"}}
{"prompt": "set a timer for a 90-minute movie", "context": "Sets a timer for a specific duration.", "function_signature": "set_timer(duration: str, purpose: str)", "param_annotations": {"duration": ["90-minute"], "purpose": ["movie"]}, "args": {"duration": "90-minute", "purpose": "movie"}}
{"prompt": "add an event 'Team Happy Hour' to my calendar on Thursday at 5 PM", "context": "Creates a new calendar event.", "function_signature": "create_calendar_event(title: str, day: str, time: str)", "param_annotations": {"title": ["Team Happy Hour"], "day": ["Thursday"], "time": ["5 PM"]}, "args": {"title": "Team Happy Hour", "day": "Thursday", "time": "5 PM"}}
{"prompt": "what's the phone number for the nearest library?", "context": "Finds the phone number for a local place.", "function_signature": "get_phone_number(place: str)", "param_annotations": {"place": ["nearest library"]}, "args": {"place": "nearest library"}}
{"prompt": "open the Instagram app", "context": "Opens a mobile application.", "function_signature": "open_app(app_name: str)", "param_annotations": {"app_name": ["Instagram"]}, "args": {"app_name": "Instagram"}}
